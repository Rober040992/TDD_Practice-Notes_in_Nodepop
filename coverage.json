
> nodeapp@1.0.0 test:coverage
> jest --coverage --forceExit --json

{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":6,"numPassedTests":38,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":38,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1737915340633,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Funcion para calcular la media de un array de valores"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Funcion para calcular la media de un array de valores 1. Para un array de valores 1, la media es 1. ([1, 1, 1])","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"1. Para un array de valores 1, la media es 1. ([1, 1, 1])"},{"ancestorTitles":["Funcion para calcular la media de un array de valores"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Funcion para calcular la media de un array de valores 2. Para un array vacio ([]) la media es NaN.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"2. Para un array vacio ([]) la media es NaN."},{"ancestorTitles":["Funcion para calcular la media de un array de valores"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion para calcular la media de un array de valores 3. Para un array de elementos positivos, la media debe ser positiva.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"3. Para un array de elementos positivos, la media debe ser positiva."},{"ancestorTitles":["Funcion para calcular la media de un array de valores"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Funcion para calcular la media de un array de valores 3. Para un array de elementos positivos, la media debe ser positiva.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"3. Para un array de elementos positivos, la media debe ser positiva."},{"ancestorTitles":["Funcion para calcular la media de un array de valores"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Funcion para calcular la media de un array de valores Debe devolver N para un array [N, N, N, N, N]","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Debe devolver N para un array [N, N, N, N, N]"}],"endTime":1737915341576,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\avg.test.js","startTime":1737915340821,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Funcion suma"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Sumar 0 + 0 es igual a 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 0 + 0 es igual a 0"},{"ancestorTitles":["Funcion suma"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma sumar 1 + 2 es igual a 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sumar 1 + 2 es igual a 3"},{"ancestorTitles":["Funcion suma"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Sumar 1 + -1 es igual a 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 1 + -1 es igual a 0"},{"ancestorTitles":["Funcion suma"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Sumar 1.1000000 + 2.230404 sea igual a 3.330404","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 1.1000000 + 2.230404 sea igual a 3.330404"},{"ancestorTitles":["Funcion suma","Función sum con valores negativos"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Función sum con valores negativos Sumar 1 + -1 es igual a 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 1 + -1 es igual a 0"},{"ancestorTitles":["Funcion suma","Función sum con valores negativos"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Función sum con valores negativos Sumar -1 + -3 debe dar un valor negativo","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Sumar -1 + -3 debe dar un valor negativo"},{"ancestorTitles":["Funcion suma","Testear con valores no numericos"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Testear con valores no numericos Sumar 1 y 'a' debe devolver un error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 1 y 'a' debe devolver un error"},{"ancestorTitles":["Funcion suma","Testear con valores no numericos"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Testear con valores no numericos Sumar 'a' y '1' debe devolver un error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 'a' y '1' debe devolver un error"},{"ancestorTitles":["Funcion suma","Testear con valores no numericos"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Testear con valores no numericos Sumar 'a' y '1' debe devolver un error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 'a' y '1' debe devolver un error"},{"ancestorTitles":["Funcion suma","Testear con valores no numericos"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Funcion suma Testear con valores no numericos Sumar 'a' y '1' debe devolver un error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Sumar 'a' y '1' debe devolver un error"}],"endTime":1737915341594,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\suma.test.js","startTime":1737915340820,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito debe tener una función getTotalItems que devuelva 0 a la inicialización.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito debe tener una función getTotalItems que devuelva 0 a la inicialización."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.getTotalItems debe devolver 1 despues de añadir un elemento al carrito.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.getTotalItems debe devolver 1 despues de añadir un elemento al carrito."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.getTotalItems debe devolver 2 despues de añadir 1 elemento al carrito dos veces.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.getTotalItems debe devolver 2 despues de añadir 1 elemento al carrito dos veces."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.addItem debe devolver un error si se añade un item sin precio.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.addItem debe devolver un error si se añade un item sin precio."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.addItem debe devolver un error si se añade un item sin nombre.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.addItem debe devolver un error si se añade un item sin nombre."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.addItem debe devolver un error diciendo 'Item must be an object' si el item no es un objeto.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.addItem debe devolver un error diciendo 'Item must be an object' si el item no es un objeto."},{"ancestorTitles":["Testing class Carrito","Testeando getTotalItems , addItem and totalCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing class Carrito Testeando getTotalItems , addItem and totalCheck Carrito.addItem debe devolver un error diciendo 'Item must have price and name' si el item no contiene nombre o precio.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Carrito.addItem debe devolver un error diciendo 'Item must have price and name' si el item no contiene nombre o precio."},{"ancestorTitles":["Testeando getTotalCheckout"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Testeando getTotalCheckout Debe devolver 10 despues de añadir 1 sushiItem","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver 10 despues de añadir 1 sushiItem"},{"ancestorTitles":["Testeando getTotalCheckout"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Testeando getTotalCheckout Debe devolver 20 despues de añadir 2 sushiItem","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver 20 despues de añadir 2 sushiItem"},{"ancestorTitles":["Testeando getTotalCheckout"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Testeando getTotalCheckout Debe devolver 11,5 despues de añadir 1 sushiItem i 1 waterItem","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver 11,5 despues de añadir 1 sushiItem i 1 waterItem"},{"ancestorTitles":["Testeando getTotalCheckout"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testeando getTotalCheckout Debe devolver 0 si el carrito esta vacío","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver 0 si el carrito esta vacío"}],"endTime":1737915341614,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Carrito.test.js","startTime":1737915340821,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Users class test","Usando api real"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Users class test Usando api real Debe devolver un array de 10 usuarios cuando llamamos a all()","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Debe devolver un array de 10 usuarios cuando llamamos a all()"},{"ancestorTitles":["Users class test","Usando api real"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Users class test Usando api real Debe devolver un array donde el tercer elemento tiene la propiedad name que incluye el valor 'Clementine'","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Debe devolver un array donde el tercer elemento tiene la propiedad name que incluye el valor 'Clementine'"}],"endTime":1737915341760,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Users.spec.js","startTime":1737915340819,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Testing de homeController"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Testing de homeController No se debe llamar a Agent.list si no hay usuario","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"No se debe llamar a Agent.list si no hay usuario"},{"ancestorTitles":["Testing de homeController"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing de homeController Al llamar a homeController.index se deben listar los agentes solo si hay usuario","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Al llamar a homeController.index se deben listar los agentes solo si hay usuario"},{"ancestorTitles":["Testing de homeController"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Testing de homeController Al llamar a homeController.index con un filter de owner, se deben listar los agentes filtrados por owner","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Al llamar a homeController.index con un filter de owner, se deben listar los agentes filtrados por owner"},{"ancestorTitles":["Testing de homeController"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Testing de homeController Al llamar a homeController.index se debe llamar a render con el parametro home","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Al llamar a homeController.index se debe llamar a render con el parametro home"}],"endTime":1737915342162,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\controllers\\homeController.spec.js","startTime":1737915340821,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Async / Await style"],"duration":462,"failureDetails":[],"failureMessages":[],"fullName":"Async / Await style Debe devolver un codigo 200 cuando llamamos a successfullRequest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver un codigo 200 cuando llamamos a successfullRequest"},{"ancestorTitles":["Async / Await style"],"duration":135,"failureDetails":[],"failureMessages":[],"fullName":"Async / Await style Debe devolver un error con código de estado 403 para failedRequest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver un error con código de estado 403 para failedRequest"},{"ancestorTitles":["Callback style"],"duration":97,"failureDetails":[],"failureMessages":[],"fullName":"Callback style Debe devolver un codigo 200 cuando llamamos a successfullRequest","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Debe devolver un codigo 200 cuando llamamos a successfullRequest"},{"ancestorTitles":["Callback style"],"duration":96,"failureDetails":[],"failureMessages":[],"fullName":"Callback style Debe devolver un error con código de estado 403 para failedRequest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver un error con código de estado 403 para failedRequest"},{"ancestorTitles":["Pomise style"],"duration":97,"failureDetails":[],"failureMessages":[],"fullName":"Pomise style Debe devolver un error con código de estado 403 para failedRequest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Debe devolver un error con código de estado 403 para failedRequest"},{"ancestorTitles":["Pomise style"],"duration":357,"failureDetails":[],"failureMessages":[],"fullName":"Pomise style Debe devolver un codigo 200 cuando llamamos a successfullRequest","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Debe devolver un codigo 200 cuando llamamos a successfullRequest"}],"endTime":1737915342874,"message":"","name":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\promises.spec.js","startTime":1737915340821,"status":"passed","summary":""}],"wasInterrupted":false,"coverageMap":{"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\avg.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\avg.js","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":75}},"1":{"start":{"line":4,"column":42},"end":{"line":4,"column":55}}},"fnMap":{"0":{"name":"calculateAverage","decl":{"start":{"line":2,"column":24},"end":{"line":2,"column":40}},"loc":{"start":{"line":2,"column":48},"end":{"line":6,"column":3}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":42},"end":{"line":4,"column":55}},"line":4}},"branchMap":{},"s":{"0":9,"1":44},"f":{"0":9,"1":44},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6716ac4bed444c22a9aae8bc0cc44743940dd63"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\suma.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\suma.js","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"1":{"start":{"line":3,"column":6},"end":{"line":3,"column":42}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":15}}},"fnMap":{"0":{"name":"suma","decl":{"start":{"line":1,"column":24},"end":{"line":1,"column":28}},"loc":{"start":{"line":1,"column":35},"end":{"line":7,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},{"start":{},"end":{}}],"line":2},"1":{"loc":{"start":{"line":2,"column":6},"end":{"line":2,"column":26}},"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":14}},{"start":{"line":2,"column":18},"end":{"line":2,"column":26}}],"line":2}},"s":{"0":11,"1":4,"2":7},"f":{"0":11},"b":{"0":[4,7],"1":[11,9]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b833bd4468720693e71b910beaac1ee20e63653e"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Carrito.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Carrito.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":13}},"1":{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":26}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":82}},"4":{"start":{"line":16,"column":40},"end":{"line":16,"column":82}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":90}},"6":{"start":{"line":17,"column":41},"end":{"line":17,"column":90}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":41}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":18},"end":{"line":20,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":23},"end":{"line":27,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":82}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":82}},{"start":{},"end":{}}],"line":16},"1":{"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":90}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":90}},{"start":{},"end":{}}],"line":17},"2":{"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":38}},"type":"binary-expr","locations":[{"start":{"line":17,"column":13},"end":{"line":17,"column":24}},{"start":{"line":17,"column":28},"end":{"line":17,"column":38}}],"line":17}},"s":{"0":11,"1":11,"2":3,"3":12,"4":1,"5":11,"6":3,"7":8,"8":8,"9":4},"f":{"0":3,"1":12,"2":4},"b":{"0":[1,11],"1":[3,8],"2":[11,9]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1eba62013a083fe26401c7ba8764e53f8eca3179"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Users.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\Users.js","statementMap":{"0":{"start":{"line":5,"column":17},"end":{"line":5,"column":56}},"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":67}},"2":{"start":{"line":10,"column":57},"end":{"line":10,"column":65}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":74}},"4":{"start":{"line":14,"column":64},"end":{"line":14,"column":72}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":17},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":50},"end":{"line":10,"column":51}},"loc":{"start":{"line":10,"column":57},"end":{"line":10,"column":65}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":24},"end":{"line":15,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":57},"end":{"line":14,"column":58}},"loc":{"start":{"line":14,"column":64},"end":{"line":14,"column":72}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0},"f":{"0":1,"1":1,"2":0,"3":0},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"27f38ff8f450c6c45e1a8278bc9378c769d9b037"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\models\\Agent.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\models\\Agent.js","statementMap":{"0":{"start":{"line":4,"column":20},"end":{"line":11,"column":2}},"1":{"start":{"line":14,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":15,"column":16},"end":{"line":15,"column":34}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":20}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":22}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":21}},"8":{"start":{"line":24,"column":14},"end":{"line":24,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":27},"end":{"line":14,"column":28}},"loc":{"start":{"line":14,"column":71},"end":{"line":21,"column":1}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"f":{"0":0},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"61b2ec0f396883d3e0ba2d5e383a7cd256300379"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\lib\\sessionManager.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\lib\\sessionManager.js","statementMap":{"0":{"start":{"line":4,"column":38},"end":{"line":4,"column":49}},"1":{"start":{"line":5,"column":37},"end":{"line":5,"column":60}},"2":{"start":{"line":8,"column":26},"end":{"line":18,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":34}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":8}},"5":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":26}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":10}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":8}}},"fnMap":{"0":{"name":"useSessionInViews","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":33}},"loc":{"start":{"line":20,"column":50},"end":{"line":23,"column":1}},"line":20},"1":{"name":"isLoggedIn","decl":{"start":{"line":25,"column":16},"end":{"line":25,"column":26}},"loc":{"start":{"line":25,"column":43},"end":{"line":31,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},{"start":{},"end":{}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"f":{"0":0,"1":0},"b":{"0":[0,0]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce3db40c486100a79b07eb44024ff5feeda4b161"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\webSocketServer.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\webSocketServer.js","statementMap":{"0":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"1":{"start":{"line":9,"column":2},"end":{"line":9,"column":42}},"2":{"start":{"line":11,"column":2},"end":{"line":25,"column":4}},"3":{"start":{"line":14,"column":22},"end":{"line":14,"column":47}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":26}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":88}},"6":{"start":{"line":20,"column":4},"end":{"line":23,"column":6}},"7":{"start":{"line":21,"column":6},"end":{"line":21,"column":80}},"8":{"start":{"line":22,"column":6},"end":{"line":22,"column":35}}},"fnMap":{"0":{"name":"setupSocketServer","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":33}},"loc":{"start":{"line":6,"column":46},"end":{"line":26,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":32},"end":{"line":25,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":38},"end":{"line":23,"column":5}},"line":20}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"f":{"0":0,"1":0,"2":0},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6eca3843f82fb86b2537ee5de97a2b58e886c92b"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\controllers\\homeController.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\controllers\\homeController.js","statementMap":{"0":{"start":{"line":9,"column":14},"end":{"line":9,"column":24}},"1":{"start":{"line":10,"column":17},"end":{"line":10,"column":35}},"2":{"start":{"line":12,"column":20},"end":{"line":12,"column":33}},"3":{"start":{"line":13,"column":21},"end":{"line":13,"column":35}},"4":{"start":{"line":15,"column":16},"end":{"line":15,"column":31}},"5":{"start":{"line":16,"column":15},"end":{"line":16,"column":29}},"6":{"start":{"line":18,"column":15},"end":{"line":18,"column":29}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":77}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":49}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":45}},"10":{"start":{"line":25,"column":2},"end":{"line":43,"column":3}},"11":{"start":{"line":27,"column":19},"end":{"line":27,"column":36}},"12":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"13":{"start":{"line":30,"column":6},"end":{"line":30,"column":28}},"14":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"15":{"start":{"line":34,"column":6},"end":{"line":34,"column":30}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":67}},"17":{"start":{"line":39,"column":4},"end":{"line":42,"column":12}},"18":{"start":{"line":40,"column":6},"end":{"line":40,"column":84}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":76}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"21":{"start":{"line":50,"column":14},"end":{"line":50,"column":28}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}},"23":{"start":{"line":57,"column":18},"end":{"line":57,"column":36}},"24":{"start":{"line":58,"column":15},"end":{"line":58,"column":30}},"25":{"start":{"line":59,"column":16},"end":{"line":59,"column":32}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":61}},"27":{"start":{"line":66,"column":15},"end":{"line":66,"column":29}},"28":{"start":{"line":67,"column":16},"end":{"line":67,"column":31}},"29":{"start":{"line":69,"column":2},"end":{"line":69,"column":50}},"30":{"start":{"line":74,"column":15},"end":{"line":74,"column":28}},"31":{"start":{"line":77,"column":2},"end":{"line":77,"column":34}},"32":{"start":{"line":79,"column":2},"end":{"line":79,"column":30}},"33":{"start":{"line":82,"column":47},"end":{"line":92,"column":1}},"34":{"start":{"line":90,"column":21},"end":{"line":90,"column":35}},"35":{"start":{"line":94,"column":2},"end":{"line":94,"column":31}},"36":{"start":{"line":95,"column":17},"end":{"line":95,"column":33}},"37":{"start":{"line":96,"column":17},"end":{"line":96,"column":33}},"38":{"start":{"line":99,"column":2},"end":{"line":99,"column":43}}},"fnMap":{"0":{"name":"index","decl":{"start":{"line":7,"column":22},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":44},"end":{"line":46,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":15},"end":{"line":39,"column":16}},"loc":{"start":{"line":39,"column":21},"end":{"line":42,"column":5}},"line":39},"2":{"name":"paranInRouteExample","decl":{"start":{"line":49,"column":16},"end":{"line":49,"column":35}},"loc":{"start":{"line":49,"column":52},"end":{"line":53,"column":1}},"line":49},"3":{"name":"paranInRouteMultipleExample","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":43}},"loc":{"start":{"line":56,"column":60},"end":{"line":62,"column":1}},"line":56},"4":{"name":"paramInQuery","decl":{"start":{"line":65,"column":16},"end":{"line":65,"column":28}},"loc":{"start":{"line":65,"column":45},"end":{"line":70,"column":1}},"line":65},"5":{"name":"createExample","decl":{"start":{"line":73,"column":16},"end":{"line":73,"column":29}},"loc":{"start":{"line":73,"column":46},"end":{"line":80,"column":1}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":90,"column":12},"end":{"line":90,"column":13}},"loc":{"start":{"line":90,"column":21},"end":{"line":90,"column":35}},"line":90},"7":{"name":"validateQueryExample","decl":{"start":{"line":93,"column":16},"end":{"line":93,"column":36}},"loc":{"start":{"line":93,"column":53},"end":{"line":100,"column":1}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":2},"end":{"line":43,"column":3}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":43,"column":3}},{"start":{},"end":{}}],"line":25},"1":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"2":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":33}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":2,"12":2,"13":0,"14":2,"15":0,"16":2,"17":2,"18":0,"19":0,"20":4,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":4,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[2,2],"1":[0,2],"2":[0,2]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"008ba714aae871c34b585c339418e1a41a84fda7"},"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\promises.js":{"path":"C:\\Users\\rgfra\\Documents\\Bootcamp_XVII\\09-TDD\\tdd-practice\\tdd-js\\examples\\promises.js","statementMap":{"0":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}},"1":{"start":{"line":7,"column":4},"end":{"line":7,"column":47}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":47}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":66}}},"fnMap":{"0":{"name":"successfullRequest","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"loc":{"start":{"line":6,"column":37},"end":{"line":8,"column":1}},"line":6},"1":{"name":"failedRequest","decl":{"start":{"line":10,"column":16},"end":{"line":10,"column":29}},"loc":{"start":{"line":10,"column":32},"end":{"line":12,"column":1}},"line":10},"2":{"name":"httpRequest","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":27}},"loc":{"start":{"line":14,"column":37},"end":{"line":16,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":43},"end":{"line":15,"column":62}},"type":"cond-expr","locations":[{"start":{"line":15,"column":53},"end":{"line":15,"column":56}},{"start":{"line":15,"column":59},"end":{"line":15,"column":62}}],"line":15}},"s":{"0":1,"1":3,"2":3,"3":0},"f":{"0":3,"1":3,"2":0},"b":{"0":[0,0]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"201cf04d73938d32ccc749358402a3fbe70f66ff"}}}
